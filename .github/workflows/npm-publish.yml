name: Publish to GitHub Packages

on:
  push:
    branches:
      - main  # Trigger on pushes to main branch

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write  # Required for publishing to GitHub Packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@rohanprichard'  # Your GitHub username

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Verify package contents
        run: |
          echo "Package contents:"
          ls -la dist/
          echo "Package.json contents:"
          cat package.json

      - name: Check if version exists and increment if needed
        run: |
          PACKAGE_NAME="@rohanprichard/fastrtc-voice-widget"
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          echo "Current version: $CURRENT_VERSION"
          echo "Package name: $PACKAGE_NAME"

          # Check if package exists at all first
          if npm view "$PACKAGE_NAME" version 2>/dev/null; then
            echo "Package $PACKAGE_NAME already exists, checking if version $CURRENT_VERSION exists..."

            # Check if specific version already exists
            if npm view "$PACKAGE_NAME@$CURRENT_VERSION" version 2>/dev/null; then
              echo "Version $CURRENT_VERSION already exists, incrementing patch version..."

              # Increment patch version using npm version command
              npm version patch --no-git-tag-version

              NEW_VERSION=$(node -p "require('./package.json').version")
              echo "Updated package.json to version $NEW_VERSION"
            else
              echo "Version $CURRENT_VERSION does not exist, will publish as-is"
            fi
          else
            echo "Package $PACKAGE_NAME does not exist yet (first publish), will publish version $CURRENT_VERSION"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rebuild if version changed
        run: |
          # Check if version was incremented (get original version from git)
          ORIGINAL_VERSION=$(git show HEAD:package.json | node -p "JSON.parse(require('fs').readFileSync(0, 'utf8')).version")
          NEW_VERSION=$(node -p "require('./package.json').version")

          if [ "$ORIGINAL_VERSION" != "$NEW_VERSION" ]; then
            echo "Version was incremented from $ORIGINAL_VERSION to $NEW_VERSION, rebuilding..."
            npm run build
          else
            echo "Version unchanged, using existing build"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
Trigger workflow
